/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.controller;

import backend.model.User;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


@RestController
@RequestMapping("/DataManageController")
public class ItemDatabaseRestController extends ControllerParent{
    
    @RequestMapping(method = RequestMethod.GET, produces = "application/json")
    public User getUser(){
        User user = getService().getUser("Admin");
        return user;
    }
}

/*
package main.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.List;
import main.domain.Tweet;
import main.service.Service;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@Controller
@RestController
public class TweetController {

    private Service service;
    
    public TweetController() {
        service = new Service("InMemory");
    }

    public void setService(Service service) {
        this.service = service;
    }

    public Service getService() {
        return service;
    }
    //resource mapping does not work
    //http://localhost:8080/
    @RequestMapping(value= "/",produces = MediaType.APPLICATION_XHTML_XML_VALUE) 
    public String indexPage() {
        return "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n" +
"\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n" +
"\n" +
"<html xmlns=\"http://www.w3.org/1999/xhtml\">\n" +
"\n" +
"<head>\n" +
"  <title>Title of document</title>\n" +
"  <script src=\"https://code.jquery.com/jquery-1.10.2.js\"></script>\n" +
"</head>\n" +
"\n" +
"<body>   \n" +
"        <div>TODO write content</div>\n" +
"        <a href = \"http://localhost:8080/allTweets\">Get all tweets</a>\n" +
"        <a href = \"http://localhost:8080/tweet?id=3\">Get tweet with id = 3</a>\n" +
"        <a href = \"\" id = 'delete'>Remove entry 3</a>\n" +
"         <a href = \"\" id = 'add'>add Entry 5</a>\n" +
"        \n" +
"        <script>\n" +
"                        var tweet = {\n" +
"            id:\"5\" ,\n" +
"            message:\"hello\"\n" +
"            }\n" +
"            $( \"#delete\" ).click(function(event) {\n" +
"                event.preventDefault();\n" +
"                 $.ajax({\n" +
"                    url: \"http://localhost:8080/3\", \n" +
"                    type: \"DELETE\",\n" +
"        })\n" +
"            });\n" +
"             $( \"#add\" ).click(function(event) {\n" +
"                event.preventDefault();\n" +
"                 $.ajax({\n" +
"                    url: \"http://localhost:8080\", \n" +
"                    type: \"POST\",\n" +
"                    data: tweet,\n" +
"                    dataType:\"json\",\n" +
"        })\n" +
"            });\n" +
"        </script>\n" +
"</body>\n" +
"\n" +
"</html>\n" +
"";
    }
    
    //http://localhost:8080/
    /*
         {"id": "6","message": "Tweet!"}
    */
/*
    @RequestMapping(method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody 
    public void addTweet(@RequestBody Tweet tweet){ 
        System.out.println("Adding tweet " + tweet.getId());
        service.addTeet(tweet);
    }
    
    //http://localhost:8080/6
    /*
         {"id": "6","message": "Tweet!"}
    
    @RequestMapping(value="{id}",method = RequestMethod.PUT, consumes = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    public void updateTweet(@PathVariable String id, @RequestBody Tweet tweet) {
        System.out.println("Updating tweet " + tweet.getId());
        tweet.setId(id);
        service.updateTweet(tweet);
    }
    
    //http://localhost:8080/1/
    @RequestMapping(value = "{id}", method = RequestMethod.DELETE)
    @ResponseBody
    public void deleteTweet(@PathVariable String id) {
        System.out.println("deleting " + id);
        service.deleteTweet(id);
    }
    
    //http://localhost:8080/tweet?id=3
    @RequestMapping("/tweet")
    public Tweet tweet(@RequestParam(value="id") String id){
        return service.getTweetById(id);
    }
    
    //http://localhost:8080/allTweets
    @RequestMapping("/allTweets")
    public List<Tweet> allTweet(){
        System.out.println("in getAll");
        return service.getAllTweets();
    }
}


*/
